# Diffe-Helman key exchange
import secrets
def mod_exp(g, a, p):
    my_result = 1
    g = g % p

    while a > 0:
        # if odd, mutiply with result and do mod
        if a & 1:
            my_result = (my_result * g) % p

        # now that we are even
        a = a >> 1
        g = (g*g) % p
    return my_result
b = 1998286638065473057944506344030256054916203227381748916180906390214373930105605405985818224246280726328877245115163209963634633681313092395058312190549
# a = secrets.randbits(2048)
# a was generated from the above commented code
a = 19161500129998745779646491225596287897512774869108083464851607485689134342579844770855983047473175001929164563960341660594490332691755172218174281541918135887555198504374557086502529041843694818386353408869417925877228740044711637852705108961172430734002223360969140728883659235557168744689871450376013209503481735347728182241700869857814453080236653362768201438497269176099056150607799035826560846214526020192373941554419798355776856708593039816681515657215152642673769182869596536105111077079620553754649646658778893865590787977452957494593138793682189240403246218254630100468223292340656262321036790482951806275286
# p is 1536 bits: found here: https://datatracker.ietf.org/doc/rfc3526/?include_text=1
p = 2410312426921032588552076022197566074856950548502459942654116941958108831682612228890093858261341614673227141477904012196503648957050582631942730706805009223062734745341073406696246014589361659774041027169249453200378729434170325843778659198143763193776859869524088940195577346119843545301547043747207749969763750084308926339295559968882457872412993810129130294592999947926365264059284647209730384947211681434464714438488520940127459844288859336526896320919633919
# compute g^a mod p where g == 5
five_to_the_a_mod_p = 2108901106642430532847136133502698616615393457022448253245981962888389802251387537483881171075565001537685719796812173484216654799399834201998207612230090747149895380864192763441961976581554185324607856603980871408375338150675013606445339296871530535201364550700995941101796485191186726632071297631938608444908558349520499459825348646024510157162952377230342850375141855780283084644381296541808151487562982706753491389382373899588732893315602310739912061875063242
g_to_the_b_mod_p = 2288704420068903586764501676106653319344124213430566034818915036927794925622356533320851725230842548119716283933059707880064420341008814291902830371856825424978138659597305277229316369604008261717556373665392196103259904747245332151934605563946535004650309870070129807222148130751962024278027065225975555491711997684333769442688027531837969758067399729723106289586229848895729927657848385273503535364414565645379811808291617155554187155378299629043457379904048383
g_to_the_t_mod_p_srv = 	1818546248429677563614416635885572921160962952386612624307472064911575575158833659884029694527497319772584176041317522896426835138816053938760479058234992287604752165072069779464064667724715504052326123759895949018350807732260290575201116216437462709573228328867849629807196167676825851329866862315124373554294360837510734811346769995498694541322072780358348420843564040188368296273419522827067974616592369897224351658312089559001776203905849299647507105969430454
g_to_the_b_times_a = 1261407683081534812499939096136730836928376405456320843906575439047108227454454924669981158156005958147123583489383725028207715073307950148621412627640402758525098164197415903545333580368803297849357908286945579679803246871974679279101404846279860023480028968004402435304985384527438837475760309301299414997425641383240871407351115580534073062747257416453660279491046699285935021080460119284545740251943884409995677299198334371089503840378829294343939226055943607

print(mod_exp(g_to_the_t_mod_p_srv, a,p))
#print(g_to_the_t_mod_p_srv ^ a % p)
#print(mod_exp(5, a, p) == five_to_the_a_mod_p)

#print(mod_exp(5, b, p) == g_to_the_b_mod_p)
#print(mod_exp(5, a * b, p) == g_to_the_b_times_a)
#res = mod_exp(5,  g_to_the_t_mod_p_srv ^ a,p) # TODO whats the difference between debug and passoff g^t mod p??
#print(res)

#print()
#print ((5^a)%p)
#l = (g_to_the_t_mod_p_srv ^ a) % p;
#g_to_the_b_mod_p_srv_res =
